{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from './components/pages/Home.vue';\nimport Login from './components/pages/Login.vue';\nimport Register from './components/pages/Register.vue';\nimport About from './components/pages/About.vue';\nimport Contact from './components/pages/Contact.vue';\nimport Landing from './components/pages/Landing.vue';\nimport Profile from './components/pages/Profile.vue';\nconst routes = [{\n  path: '/',\n  component: Landing\n}, {\n  path: '/login',\n  component: Login\n}, {\n  path: '/register',\n  component: Register\n}, {\n  path: '/about',\n  component: About\n}, {\n  path: '/contact',\n  component: Contact\n}, {\n  path: '/home',\n  component: Home,\n  meta: {\n    requiresAuth: true\n  }\n},\n// Add meta field for authentication\n{\n  path: '/profile',\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n  if (to.meta.requiresAuth && !isLoggedIn) {\n    // If the route requires authentication and the user is not logged in, redirect to the login page\n    next('/login');\n  } else {\n    // If the route does not require authentication or the user is logged in, proceed with the navigation\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","About","Contact","Landing","Profile","routes","path","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isLoggedIn","localStorage","getItem"],"sources":["D:/Ganknow Projects/Vue/frontend/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Home from './components/pages/Home.vue';\r\nimport Login from './components/pages/Login.vue';\r\nimport Register from './components/pages/Register.vue';\r\nimport About from './components/pages/About.vue';\r\nimport Contact from './components/pages/Contact.vue';\r\nimport Landing from './components/pages/Landing.vue';\r\nimport Profile from './components/pages/Profile.vue'\r\n\r\nconst routes = [\r\n  { path: '/', component: Landing },\r\n  { path: '/login', component: Login },\r\n  { path: '/register', component: Register },\r\n  { path: '/about', component: About },\r\n  { path: '/contact', component: Contact },\r\n  { path: '/home', component: Home, meta: { requiresAuth: true } }, // Add meta field for authentication\r\n  { path: '/profile', component: Profile, meta: { requiresAuth: true } },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n\r\n  if (to.meta.requiresAuth && !isLoggedIn) {\r\n    // If the route requires authentication and the user is not logged in, redirect to the login page\r\n    next('/login');\r\n  } else {\r\n    // If the route does not require authentication or the user is logged in, proceed with the navigation\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,OAAO,MAAM,gCAAgC;AAEpD,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEJ;AAAQ,CAAC,EACjC;EAAEG,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAER;AAAM,CAAC,EACpC;EAAEO,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEP;AAAS,CAAC,EAC1C;EAAEM,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEN;AAAM,CAAC,EACpC;EAAEK,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAQ,CAAC,EACxC;EAAEI,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAET,IAAI;EAAEU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC;AAAE;AAClE;EAAEH,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEH,OAAO;EAAEI,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,CACvE;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAAC,CAAC;EAC3BQ;AACF,CAAC,CAAC;AAEFK,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;EAEhE,IAAIL,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,UAAU,EAAE;IACvC;IACAD,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}